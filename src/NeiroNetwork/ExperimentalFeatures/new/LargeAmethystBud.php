<?php

declare(strict_types=1);

namespace NeiroNetwork\ExperimentalFeatures\new;

use NeiroNetwork\ExperimentalFeatures\new\interface\IBlock;
use pocketmine\block\Block;
use pocketmine\block\BlockBreakInfo;
use pocketmine\block\BlockIdentifier;
use pocketmine\block\BlockToolType;
use pocketmine\block\Transparent;
use pocketmine\block\utils\AnyFacingTrait;
use pocketmine\block\utils\BlockDataSerializer;
use pocketmine\item\ToolTier;

class LargeAmethystBud extends Feature implements IBlock{

	public function networkId() : int{
		return -330;
	}

	public function name() : string{
		return "large_amethyst_bud";
	}

	public function block() : Block{
		return new class(
			new BlockIdentifier($this->internalId(), 0, $this->internalId()),
			"Large Amethyst Bud",
			new BlockBreakInfo(1.5, BlockToolType::PICKAXE, ToolTier::WOOD()->getHarvestLevel())
		) extends Transparent{
			use AnyFacingTrait;

			protected function recalculateCollisionBoxes() : array{
				return parent::recalculateCollisionBoxes(); // TODO: Change the autogenerated stub
			}

			protected function writeStateToMeta() : int{
				return BlockDataSerializer::writeFacing($this->facing);
			}

			public function readStateFromData(int $id, int $stateMeta) : void{
				$this->facing = BlockDataSerializer::readFacing($stateMeta);
			}
		};
	}
}